Parameters:
    BranchName:
        Description: GitHub branch name
        Type: String
        Default: main
    RepositoryName:
        Description: GitHub repository name
        Type: String
        Default: appsync-tested-and-documented
    GitHubOwner:
        Type: String
        Default: dodgeblaster
Resources:
    # - - - - - - - - - - - - - - - - - - - - - - - -
    # S3 Bucket for Artifacts
    # - - - - - - - - - - - - - - - - - - - - - - - -
    CodePipelineArtifactStoreBucket:
        Type: 'AWS::S3::Bucket'
    CodePipelineArtifactStoreBucketPolicy:
        Type: 'AWS::S3::BucketPolicy'
        Properties:
            Bucket: !Ref CodePipelineArtifactStoreBucket
            PolicyDocument:
                Version: 2012-10-17
                Statement:
                    - Sid: DenyUnEncryptedObjectUploads
                      Effect: Deny
                      Principal: '*'
                      Action: 's3:PutObject'
                      Resource: !Join
                          - ''
                          - - !GetAtt
                              - CodePipelineArtifactStoreBucket
                              - Arn
                            - /*
                      Condition:
                          StringNotEquals:
                              's3:x-amz-server-side-encryption': 'aws:kms'
                    - Sid: DenyInsecureConnections
                      Effect: Deny
                      Principal: '*'
                      Action: 's3:*'
                      Resource: !Join
                          - ''
                          - - !GetAtt
                              - CodePipelineArtifactStoreBucket
                              - Arn
                            - /*
                      Condition:
                          Bool:
                              'aws:SecureTransport': false
    # - - - - - - - - - - - - - - - - - - - - - - - -
    # Code Build Project
    # If there are no lambda functions, then this can be skipped
    # - - - - - - - - - - - - - - - - - - - - - - - -
    CodeBuildProject:
        Type: AWS::CodeBuild::Project
        Properties:
            Artifacts:
                Type: CODEPIPELINE
            Environment:
                ComputeType: BUILD_GENERAL1_SMALL
                Image: aws/codebuild/standard:5.0
                Type: LINUX_CONTAINER
                EnvironmentVariables:
                    - Name: BUILD_OUTPUT_BUCKET
                      Value: !Ref CodePipelineArtifactStoreBucket
            Name: first-code-build
            QueuedTimeoutInMinutes: 5
            Source:
                Type: CODEPIPELINE
                BuildSpec: code/buildspec.yml
            ServiceRole: !GetAtt CodeBuildServiceRole.Arn
    CodeBuildServiceRole:
        Type: AWS::IAM::Role
        Properties:
            AssumeRolePolicyDocument:
                Version: '2012-10-17'
                Statement:
                    - Effect: Allow
                      Action: 'sts:AssumeRole'
                      Principal:
                          Service:
                              - codebuild.amazonaws.com
            Path: /
            Policies:
                - PolicyName: CodeBuildLogs
                  PolicyDocument:
                      Version: '2012-10-17'
                      Statement:
                          - Effect: Allow
                            Action:
                                - 'logs:CreateLogGroup'
                                - 'logs:CreateLogStream'
                                - 'logs:PutLogEvents'
                            Resource:
                                - !Sub 'arn:aws:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/codebuild/first-code-build'
                                - !Sub 'arn:aws:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/codebuild/first-code-build:*'
                - PolicyName: CodeBuildArtifactsBucket
                  PolicyDocument:
                      Version: '2012-10-17'
                      Statement:
                          - Effect: Allow
                            Action:
                                - 's3:GetObject'
                                - 's3:GetObjectVersion'
                                - 's3:PutObject'
                            Resource:
                                - !Sub 'arn:aws:s3:::${CodePipelineArtifactStoreBucket}/*'
                - PolicyName: CodeBuildParameterStore
                  PolicyDocument:
                      Version: '2012-10-17'
                      Statement:
                          - Effect: Allow
                            Action: 'ssm:GetParameters'
                            Resource: '*'
    # - - - - - - - - - - - - - - - - - - - - - - - -
    # CodePipeline
    # - - - - - - - - - - - - - - - - - - - - - - - -
    AppPipelineWebhook:
        Type: 'AWS::CodePipeline::Webhook'
        Properties:
            Authentication: GITHUB_HMAC
            AuthenticationConfiguration:
                SecretToken: '{{resolve:secretsmanager:GithubToken:SecretString:GithubToken}}'
            Filters:
                - JsonPath: $.ref
                  MatchEquals: 'refs/heads/{Branch}'
            TargetPipeline: !Ref AppPipeline
            TargetAction: SourceAction
            Name: AppPipelineWebhook
            TargetPipelineVersion: !GetAtt
                - AppPipeline
                - Version
            RegisterWithThirdParty: true
    AppPipeline:
        Type: 'AWS::CodePipeline::Pipeline'
        Properties:
            Name: github-events-pipeline
            RoleArn: !GetAtt
                - CodePipelineServiceRole
                - Arn
            ArtifactStore:
                Type: S3
                Location: !Ref CodePipelineArtifactStoreBucket
            Stages:
                - Name: Source
                  Actions:
                      - Name: SourceAction
                        ActionTypeId:
                            Category: Source
                            Owner: ThirdParty
                            Version: '1'
                            Provider: GitHub
                        OutputArtifacts:
                            - Name: SourceOutput
                        Configuration:
                            Owner: !Ref GitHubOwner
                            Repo: !Ref RepositoryName
                            Branch: !Ref BranchName
                            OAuthToken: '{{resolve:secretsmanager:GithubToken:SecretString:GithubToken}}'
                            PollForSourceChanges: false
                        RunOrder: 1
                - Name: Build
                  Actions:
                      - Name: CodeBuild
                        ActionTypeId:
                            Category: Build
                            Owner: AWS
                            Provider: CodeBuild
                            Version: '1'
                        Configuration:
                            ProjectName: !Ref CodeBuildProject
                        InputArtifacts:
                            - Name: SourceOutput
                        OutputArtifacts:
                            - Name: BuildArtifactAsZip
                - Name: Stage
                  Actions:
                      # - - -
                      # Create change set
                      # - - -
                      - Name: CreateChangeSet
                        ActionTypeId:
                            Category: Deploy
                            Owner: AWS
                            Provider: CloudFormation
                            Version: '1'
                        RunOrder: 1
                        Configuration:
                            ActionMode: CHANGE_SET_REPLACE
                            RoleArn: !GetAtt CloudFormationExecutionRole.Arn
                            StackName: AppsyncTested
                            ChangeSetName: pipeline-changeset
                            TemplatePath: 'BuildArtifactAsZip::packaged.yml'
                            Capabilities: CAPABILITY_NAMED_IAM,CAPABILITY_AUTO_EXPAND
                            ParameterOverrides: '{"APIName": "AppsyncTested"}'

                            #TemplateConfiguration: 'my-project--BuildArtifact::template-configuration.json'
                        InputArtifacts:
                            - Name: BuildArtifactAsZip
                      - Name: ExecuteChangeSet
                        ActionTypeId:
                            Category: Deploy
                            Owner: AWS
                            Provider: CloudFormation
                            Version: '1'
                        RunOrder: 2
                        Configuration:
                            ActionMode: CHANGE_SET_EXECUTE
                            StackName: AppsyncTested
                            RoleArn: !GetAtt CloudFormationExecutionRole.Arn
                            ChangeSetName: pipeline-changeset
                        OutputArtifacts:
                            - Name: pipeline-changeset-output
                - Name: Staging
                  Actions:
                      - Name: IntegrationTests
                        ActionTypeId:
                            Category: Invoke
                            Owner: AWS
                            Provider: Lambda
                            Version: '1'
                        RunOrder: 3
                        Configuration:
                            FunctionName: appsync-tested-inttests-dev-NotesTest
                        OutputArtifacts: []
                        InputArtifacts: []
                        Region: us-east-1
    CodePipelineServiceRole:
        Type: 'AWS::IAM::Role'
        Properties:
            AssumeRolePolicyDocument:
                Version: 2012-10-17
                Statement:
                    - Effect: Allow
                      Principal:
                          Service:
                              - codepipeline.amazonaws.com
                      Action: 'sts:AssumeRole'
            Path: /
            Policies:
                - PolicyName: AWS-CodePipeline-Service-3
                  PolicyDocument:
                      Version: 2012-10-17
                      Statement:
                          - Effect: Allow
                            Action:
                                - 'codecommit:CancelUploadArchive'
                                - 'codecommit:GetBranch'
                                - 'codecommit:GetCommit'
                                - 'codecommit:GetUploadArchiveStatus'
                                - 'codecommit:UploadArchive'
                            Resource: '*'
                          - Effect: Allow
                            Action:
                                - 'codedeploy:CreateDeployment'
                                - 'codedeploy:GetApplicationRevision'
                                - 'codedeploy:GetDeployment'
                                - 'codedeploy:GetDeploymentConfig'
                                - 'codedeploy:RegisterApplicationRevision'
                            Resource: '*'
                          - Effect: Allow
                            Action:
                                - 'codebuild:BatchGetBuilds'
                                - 'codebuild:StartBuild'
                            Resource: '*'
                          - Effect: Allow
                            Action:
                                - 'devicefarm:ListProjects'
                                - 'devicefarm:ListDevicePools'
                                - 'devicefarm:GetRun'
                                - 'devicefarm:GetUpload'
                                - 'devicefarm:CreateUpload'
                                - 'devicefarm:ScheduleRun'
                            Resource: '*'
                          - Effect: Allow
                            Action:
                                - 'lambda:InvokeFunction'
                                - 'lambda:ListFunctions'
                            Resource: '*'
                          - Effect: Allow
                            Action:
                                - 'iam:PassRole'
                            Resource: '*'
                          - Effect: Allow
                            Action:
                                - 'elasticbeanstalk:*'
                                - 'ec2:*'
                                - 'elasticloadbalancing:*'
                                - 'autoscaling:*'
                                - 'cloudwatch:*'
                                - 's3:*'
                                - 'sns:*'
                                - 'cloudformation:*'
                                - 'rds:*'
                                - 'sqs:*'
                                - 'ecs:*'
                            Resource: '*'
    CloudFormationExecutionRole:
        Type: AWS::IAM::Role
        Properties:
            AssumeRolePolicyDocument:
                Version: '2012-10-17'
                Statement:
                    Action: 'sts:AssumeRole'
                    Effect: Allow
                    Principal:
                        Service: cloudformation.amazonaws.com
            Path: /
            ManagedPolicyArns:
                - 'arn:aws:iam::aws:policy/AdministratorAccess'
