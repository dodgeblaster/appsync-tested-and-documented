Parameters:
    BranchName:
        Description: GitHub branch name
        Type: String
        Default: main
    RepositoryName:
        Description: GitHub repository name
        Type: String
        Default: examplepipeline
    GitHubOwner:
        Type: String
        Default: dodgeblaster
    ApplicationName:
        Description: CodeDeploy application name
        Type: String
        Default: AppsyncTested
    BetaFleet:
        Description: Fleet configured in CodeDeploy
        Type: String
        Default: DemoFleet
Resources:
    CodeBuildProject:
        Type: AWS::CodeBuild::Project
        Properties:
            Artifacts:
                Type: CODEPIPELINE
            Environment:
                ComputeType: BUILD_GENERAL1_SMALL
                Image: aws/codebuild/nodejs:12.13.0
                Type: LINUX_CONTAINER
            Name: FirstCodeBuild
            QueuedTimeoutInMinutes: 5
            Source:
                Type: GITHUB
            ServiceRole:
                Location: my-example-source-location
    # - - - - - - - - - - - - - - - - - - - - - - - -
    # S3 Bucket
    # - - - - - - - - - - - - - - - - - - - - - - - -
    CodePipelineArtifactStoreBucket:
        Type: 'AWS::S3::Bucket'
    CodePipelineArtifactStoreBucketPolicy:
        Type: 'AWS::S3::BucketPolicy'
        Properties:
            Bucket: !Ref CodePipelineArtifactStoreBucket
            PolicyDocument:
                Version: 2012-10-17
                Statement:
                    - Sid: DenyUnEncryptedObjectUploads
                      Effect: Deny
                      Principal: '*'
                      Action: 's3:PutObject'
                      Resource: !Join
                          - ''
                          - - !GetAtt
                              - CodePipelineArtifactStoreBucket
                              - Arn
                            - /*
                      Condition:
                          StringNotEquals:
                              's3:x-amz-server-side-encryption': 'aws:kms'
                    - Sid: DenyInsecureConnections
                      Effect: Deny
                      Principal: '*'
                      Action: 's3:*'
                      Resource: !Join
                          - ''
                          - - !GetAtt
                              - CodePipelineArtifactStoreBucket
                              - Arn
                            - /*
                      Condition:
                          Bool:
                              'aws:SecureTransport': false
    # - - - - - - - - - - - - - - - - - - - - - - - -
    # CodePipeline
    # - - - - - - - - - - - - - - - - - - - - - - - -
    # AppPipelineWebhook:
    #     Type: 'AWS::CodePipeline::Webhook'
    #     Properties:
    #         Authentication: GITHUB_HMAC
    #         AuthenticationConfiguration:
    #             SecretToken: '{{resolve:secretsmanager:GithubToken:SecretString:GithubToken}}'
    #         Filters:
    #             - JsonPath: $.ref
    #               MatchEquals: 'refs/heads/{Branch}'
    #         TargetPipeline: !Ref AppPipeline
    #         TargetAction: SourceAction
    #         Name: AppPipelineWebhook
    #         TargetPipelineVersion: !GetAtt
    #             - AppPipeline
    #             - Version
    #         RegisterWithThirdParty: true
    # AppPipeline:
    #     Type: 'AWS::CodePipeline::Pipeline'
    #     Properties:
    #         Name: github-events-pipeline
    #         RoleArn: !GetAtt
    #             - CodePipelineServiceRole
    #             - Arn
    #         Stages:
    #             - Name: Source
    #               Actions:
    #                   - Name: SourceAction
    #                     ActionTypeId:
    #                         Category: Source
    #                         Owner: ThirdParty
    #                         Version: 1
    #                         Provider: GitHub
    #                     OutputArtifacts:
    #                         - Name: SourceOutput
    #                     Configuration:
    #                         Owner: !Ref GitHubOwner
    #                         Repo: !Ref RepositoryName
    #                         Branch: !Ref BranchName
    #                         OAuthToken: '{{resolve:secretsmanager:GithubToken:SecretString:GithubToken}}'
    #                         PollForSourceChanges: false
    #                     RunOrder: 1
    #             - Name: Beta
    #               Actions:
    #                   - Name: BetaAction
    #                     InputArtifacts:
    #                         - Name: SourceOutput
    #                     ActionTypeId:
    #                         Category: Deploy
    #                         Owner: AWS
    #                         Version: 1
    #                         Provider: CodeDeploy
    #                     Configuration:
    #                         ApplicationName: !Ref ApplicationName
    #                         DeploymentGroupName: !Ref BetaFleet
    #                     RunOrder: 1
    #         ArtifactStore:
    #             Type: S3
    #             Location: !Ref CodePipelineArtifactStoreBucket
    # # - - - - - - - - - - - - - - - - - - - - - - - -
    # # IAM Role for CodePipeline
    # # - - - - - - - - - - - - - - - - - - - - - - - -
    # CodePipelineServiceRole:
    #   Type: 'AWS::IAM::Role'
    #   Properties:
    #     AssumeRolePolicyDocument:
    #       Version: 2012-10-17
    #       Statement:
    #         - Effect: Allow
    #           Principal:
    #             Service:
    #               - codepipeline.amazonaws.com
    #           Action: 'sts:AssumeRole'
    #     Path: /
    #     Policies:
    #       - PolicyName: AWS-CodePipeline-Service-3
    #         PolicyDocument:
    #           Version: 2012-10-17
    #           Statement:
    #             - Effect: Allow
    #               Action:
    #                 - 'codecommit:CancelUploadArchive'
    #                 - 'codecommit:GetBranch'
    #                 - 'codecommit:GetCommit'
    #                 - 'codecommit:GetUploadArchiveStatus'
    #                 - 'codecommit:UploadArchive'
    #               Resource: '*'
    #             - Effect: Allow
    #               Action:
    #                 - 'codedeploy:CreateDeployment'
    #                 - 'codedeploy:GetApplicationRevision'
    #                 - 'codedeploy:GetDeployment'
    #                 - 'codedeploy:GetDeploymentConfig'
    #                 - 'codedeploy:RegisterApplicationRevision'
    #               Resource: '*'
    #             - Effect: Allow
    #               Action:
    #                 - 'codebuild:BatchGetBuilds'
    #                 - 'codebuild:StartBuild'
    #               Resource: '*'
    #             - Effect: Allow
    #               Action:
    #                 - 'devicefarm:ListProjects'
    #                 - 'devicefarm:ListDevicePools'
    #                 - 'devicefarm:GetRun'
    #                 - 'devicefarm:GetUpload'
    #                 - 'devicefarm:CreateUpload'
    #                 - 'devicefarm:ScheduleRun'
    #               Resource: '*'
    #             - Effect: Allow
    #               Action:
    #                 - 'lambda:InvokeFunction'
    #                 - 'lambda:ListFunctions'
    #               Resource: '*'
    #             - Effect: Allow
    #               Action:
    #                 - 'iam:PassRole'
    #               Resource: '*'
    #             - Effect: Allow
    #               Action:
    #                 - 'elasticbeanstalk:*'
    #                 - 'ec2:*'
    #                 - 'elasticloadbalancing:*'
    #                 - 'autoscaling:*'
    #                 - 'cloudwatch:*'
    #                 - 's3:*'
    #                 - 'sns:*'
    #                 - 'cloudformation:*'
    #                 - 'rds:*'
    #                 - 'sqs:*'
    #                 - 'ecs:*'
    #               Resource: '*'
